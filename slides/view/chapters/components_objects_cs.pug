include ../mixins/containers.pug
include ../mixins/containers_aph.pug

- var imgAssets = '../assets/components_objects/';
- var defaultBgr = 'backgrounds/objects.jpg';

+mchapter('Objektová architektura', imgAssets+'chapter_components_oop.svg')
+frameInbox('Příklad: Platformer Scene')
	.text-center
		img.height-700(src=imgAssets+'platformer.jpg')
	.bottom-80.left-270
		img.height-390(src=imgAssets+'platformer.svg')
+frameInbox('Hierarchie pro doménový model')
	.important-green.fill.center
		img.height-750(src=imgAssets+'diag_platformer_oop.svg')
+frameInbox('Problém č.1: Zapracování fyziky')
	.important-green.fill.center
		img.height-750(src=imgAssets+'diag_platformer_oop_2.svg')
+frameInbox('Další problémy')
	.important-green
		ul
			li.fragment(data-fragment-index="1") drak může mít možnost používat manu
				ul
					li.fragment(data-fragment-index="2") možnost a) přepracovat hierarchii
					li.fragment(data-fragment-index="3") možnost b) přesunout manu do rodičovské třídy
			li.fragment(data-fragment-index="4") mág může mít schopnost transformace do draka
				ul
					li.fragment(data-fragment-index="5") možnost a) vytvořit nový objekt <span class="highlight">DragonMage</span>
					li.fragment(data-fragment-index="6") možnost b) přidat referenci na objekt, do kterého se mág bude transformovat
				li.fragment(data-fragment-index="7") orc může mít možnost použít range (např. luk/kuš)
					ul
						li.fragment(data-fragment-index="8") přidat více stavů
			li.fragment(data-fragment-index="9") mág může mít inventář, který ovlivňuje jeho schopnosti
			li.fragment(data-fragment-index="10") můžeme chtít přidat další funkce během vývoje
		.right-0.top-150.fragment(data-fragment-index="5")
			img.height-400(src=imgAssets+'mage.png')
		+tipKeen1('Ne všechny závislosti jdou popsat pomocí orientovaného souvislého grafu').bottom-0
+frameInbox('All-in-one pattern')
	.important-green
		ul
			li.fragment používaný v 90. letech
			li.fragment jedna třída vládne všem
			li.fragment obrovské množství switchů a if-checků
		.text-center
			img.height-500.mt-40(src=imgAssets+'diag_allinone.svg')
+frameInbox('Příklad: Doom 2')
	.right-20.top-240
		img.height-250(src=imgAssets+'doom_a.png')
	.right-0.top-450
		img.height-250(src=imgAssets+'doom_b.png')
	.left-0.top-180
		img.height-300(src=imgAssets+'doom_c.png')
	.fill.center.absolute
		img.height-750(src=imgAssets+'diag_doom.svg')
+frameInbox('Objektová architektura: shrnutí')
	div
		ul
			li.fragment přirozený způsob zápisu hierarchie objektů
			li.fragment funguje dobře pro jednoduché hry s <span class="highlight">malým modelem</span>
			li.fragment u komplexnějších her můžeme skončit se stovkami závislostí
			li.highlight-2.fragment dědičnost není dostatečná pro modelování závislostí
			li.fragment je potřeba použít <span class="highlight">kompozici</span>, a to je doménou <span class="highlight">komponentové architektury</span>
		.space-md
		p.highlight.fragment Shrnutí
		.flex-cols-2
			div.width-25p
				ul
					li.fragment.upside jednoduché
					li.fragment.upside rychlé prototypování
					li.fragment.upside jednoduše se debugguje
			div
				ul
					li.fragment.downside hůře se škáluje
					li.fragment.downside není flexibilní
					li.fragment.downside objekty mohou mít vlastnosti, které nepotřebují